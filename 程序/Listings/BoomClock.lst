C51 COMPILER V9.60.7.0   BOOMCLOCK                                                         12/16/2024 20:33:27 PAGE 1   


C51 COMPILER V9.60.7.0, COMPILATION OF MODULE BOOMCLOCK
OBJECT MODULE PLACED IN .\Objects\BoomClock.obj
COMPILER INVOKED BY: C:\Program Files (x86)\Keil_v5\C51\BIN\C51.EXE BoomClock.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXT
                    -END PRINT(.\Listings\BoomClock.lst) TABS(2) OBJECT(.\Objects\BoomClock.obj)

line level    source

   1          #ifndef _BoomClock_c_
   2          #define _BoomClock_c_
   3          
   4          #include "BoomClock.h"
   5          
   6          #include "lib/digital/digital.h"
   7          #include "lib/ds1302/ds1302.h"
   8          
   9          #define BrightnessHigh 40
  10          #define BrightnessLow 1
  11          
  12          unsigned char Brightness = BrightnessHigh;
  13          unsigned char flashCount = 0;
  14          bit flashFlag = 1;
  15          bit enAlarm1 = 0;
  16          bit enAlarm2 = 0;
  17          unsigned char Alarm1Time[7] = {0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x00};
  18          unsigned char Alarm2Time[7] = {0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x00};
  19          
  20          unsigned char m,n;
  21          unsigned char code T[49][2]={{0,0},
  22          {0xF8,0x8B},{0xF8,0xF2},{0xF9,0x5B},{0xF9,0xB7},{0xFA,0x14},{0xFA,0x66},{0xFA,0xB9},{0xFB,0x03},{0xFB,0x4A
             -},{0xFB,0x8F},{0xFB,0xCF},{0xFC,0x0B},
  23          {0xFC,0x43},{0xFC,0x78},{0xFC,0xAB},{0xFC,0xDB},{0xFD,0x08},{0xFD,0x33},{0xFD,0x5B},{0xFD,0x81},{0xFD,0xA5
             -},{0xFD,0xC7},{0xFD,0xE7},{0xFE,0x05},
  24          {0xFE,0x21},{0xFE,0x3C},{0xFE,0x55},{0xFE,0x6D},{0xFE,0x84},{0xFE,0x99},{0xFE,0xAD},{0xFE,0xC0},{0xFE,0x02
             -},{0xFE,0xE3},{0xFE,0xF3},{0xFF,0x02},
  25          {0xFF,0x10},{0xFF,0x1D},{0xFF,0x2A},{0xFF,0x36},{0xFF,0x42},{0xFF,0x4C},{0xFF,0x56},{0xFF,0x60},{0xFF,0x69
             -},{0xFF,0x71},{0xFF,0x79},{0xFF,0x81}
  26          };
  27          unsigned char code music[][2]={{0,4},
  28          {17,8},{17,8},{17,8},{13,8},{17,4},{18,8},{17,12},{18,4},{17,4},{15,4},{15,12},{22,8},{15,4},{15,12},{0,8}
             -,{0,8},{0,8},{20,8},{20,8},{20,8},{15,8},{20,4},{22,4},{20,4},{20,8},{20,4},{22,4},{20,4},{18,4},{18,8},{18,4},{20,4},{1
             -8,8},{17,12},{0,8},{0,8},{0,8},{17,8},{17,8},{17,8},{13,8},{17,4},{18,8},{17,8},{17,4},{18,4},{17,4},{15,4},{15,8},{15,4
             -},{22,8},{15,4},{15,12},{0,8},{0,8},{0,8},{20,8},{20,8},{20,8},{15,8},{20,4},{22,4},{20,4},{20,8},{20,4},{22,4},{24,4},{
             -25,4},{25,12},{24,4},{24,8},{25,20},
  29          {0xFF,0xFF}};
  30          
  31          void InitBoomClock(void)
  32          {
  33   1        unsigned int i;
  34   1        for(i=1024; i>0; i--);    //µÈ´ýds1302ÏÈÉÏµç
  35   1        ds1302Init();
  36   1        Timer0_Init();
  37   1      }
  38          
  39          void Delay50us(void)  //ÑÓÊ±100us@11.0592MHz
  40          {
  41   1        unsigned char data i;
  42   1      
  43   1        _nop_();
  44   1        i = 20;
  45   1        while (--i);
  46   1      }
C51 COMPILER V9.60.7.0   BOOMCLOCK                                                         12/16/2024 20:33:27 PAGE 2   

  47          
  48          void BrightnessCtrl(unsigned char val)
  49          {
  50   1        while(val>0)
  51   1        {
  52   2          Delay50us();
  53   2          val -= 1;
  54   2        }
  55   1      }
  56          
  57          void DisplayRealTime(void)
  58          {
  59   1        ds1302ReadTime();
  60   1        DisplayTime(TIME, 1);
  61   1      }
  62          
  63          void DisplayTime(unsigned char* date, bit isFlash)    //ÏÔÊ¾Ê±¼ä
  64          {
  65   1        display(1, date[2]/16);
  66   1        BrightnessCtrl(Brightness);
  67   1        if(isFlash && date[0]%2) display(2, date[2]%0x10+10);
  68   1        else display(2, date[2]&0x0f);
  69   1        BrightnessCtrl(Brightness);
  70   1        display(3, date[1]/16);
  71   1        BrightnessCtrl(Brightness);
  72   1        display(4, date[1]&0x0f);
  73   1        BrightnessCtrl(Brightness);
  74   1        display(5, TIME[4]/16);
  75   1        BrightnessCtrl(Brightness);
  76   1        display(6, TIME[4]&0x0f);
  77   1        BrightnessCtrl(Brightness);
  78   1        display(7, TIME[3]/16);
  79   1        BrightnessCtrl(Brightness);
  80   1        display(8, TIME[3]&0x0f);
  81   1        BrightnessCtrl(Brightness);
  82   1        display(9, 0);    //ÊýÂë¹Ü²¢Ã»ÓÐµÚ9¶Î£¬´Ë´¦·ÀÖ¹µÚ°Ë¶ÎÏÔÊ¾Ê±¼ä¹ý³¤£¬ÁÁ¶È×îÁÁ£¬ÒòÎªds1302ReadTimeÏàµ±ÓÚÒ»¸ö
             -´óÑÓÊ±
  83   1        if(Brightness == BrightnessLow) BrightnessCtrl(500);
  84   1      }
  85          
  86          void ScanKeys(void)    //°´¼üÉ¨Ãè
  87          {
  88   1        unsigned char i;
  89   1        if(Alarm1Key == 0)
  90   1        {
  91   2          DisplayRealTime();    //Ïû¶¶ÑÓÊ±
  92   2          if(Alarm1Key == 0)
  93   2          {
  94   3            for(i=0; i<10; i++) DisplayRealTime();
  95   3            if(Alarm1Key == 1)    //¶Ì°´
  96   3            {
  97   4              reverseAlarm1();
  98   4            }
  99   3            else    //³¤°´
 100   3            {
 101   4              for(i=0; i<30; i++) DisplayRealTime();
 102   4              if(Alarm1Key == 0)    //³¤°´
 103   4              {
 104   5                while(Alarm1Key == 0)   //µÈËûËÉ¿ª
 105   5                {
 106   6                  //////////////////Õâ¸öÊ±ºòÏÈÉÁ×Å£¬Èç¹ûËû¸Ò²»ËÉÊÖ¾Í²Ù×÷ÄÇ²»ÀíËû//////////////////////////
 107   6                  TR0 = 1;
C51 COMPILER V9.60.7.0   BOOMCLOCK                                                         12/16/2024 20:33:27 PAGE 3   

 108   6                  if(flashFlag)
 109   6                  {
 110   7                    DisplayTime(Alarm1Time, 0);
 111   7                  }
 112   6                  else 
 113   6                  {
 114   7                    for(i=1; i<5; i++) display(i, 20);
 115   7                      display(5, TIME[4]/16);
 116   7                      BrightnessCtrl(Brightness);
 117   7                      display(6, TIME[4]&0x0f);
 118   7                      BrightnessCtrl(Brightness);
 119   7                      display(7, TIME[3]/16);
 120   7                      BrightnessCtrl(Brightness);
 121   7                      display(8, TIME[3]&0x0f);
 122   7                      BrightnessCtrl(Brightness);
 123   7                      display(9, 0);    //ÊýÂë¹Ü²¢Ã»ÓÐµÚ9¶Î£¬´Ë´¦·ÀÖ¹µÚ°Ë¶ÎÏÔÊ¾Ê±¼ä¹ý³¤£¬ÁÁ¶È×îÁÁ£¬ÒòÎªds1302ReadTimeÏàµ
             -±ÓÚÒ»¸ö´óÑÓÊ±
 124   7                  }
 125   6                }
 126   5                setAlarm1();
 127   5              }
 128   4              else if(Alarm1Key == 1)    //¶Ì°´
 129   4              {
 130   5                reverseAlarm1();
 131   5              }
 132   4            }
 133   3          }
 134   2        }
 135   1        if(Alarm2Key == 0)
 136   1        {
 137   2          DisplayRealTime();    //Ïû¶¶ÑÓÊ±
 138   2          if(Alarm2Key == 0)
 139   2          {
 140   3            for(i=0; i<10; i++) DisplayRealTime();
 141   3            if(Alarm2Key == 1)    //¶Ì°´
 142   3            {
 143   4              reverseAlarm2();
 144   4            }
 145   3            else    //³¤°´
 146   3            {
 147   4              for(i=0; i<30; i++) DisplayRealTime();
 148   4              if(Alarm2Key == 0)    //³¤°´
 149   4              {
 150   5                while(Alarm2Key == 0)   //µÈËûËÉ¿ª
 151   5                {
 152   6                  //////////////////Õâ¸öÊ±ºòÏÈÉÁ×Å£¬Èç¹ûËû¸Ò²»ËÉÊÖ¾Í²Ù×÷ÄÇ²»ÀíËû//////////////////////////
 153   6                  TR0 = 1;
 154   6                  if(flashFlag)
 155   6                  {
 156   7                    DisplayTime(Alarm2Time, 0);
 157   7                  }
 158   6                  else 
 159   6                  {
 160   7                    for(i=1; i<5; i++) display(i, 20);
 161   7                      display(5, TIME[4]/16);
 162   7                      BrightnessCtrl(Brightness);
 163   7                      display(6, TIME[4]&0x0f);
 164   7                      BrightnessCtrl(Brightness);
 165   7                      display(7, TIME[3]/16);
 166   7                      BrightnessCtrl(Brightness);
 167   7                      display(8, TIME[3]&0x0f);
 168   7                      BrightnessCtrl(Brightness);
C51 COMPILER V9.60.7.0   BOOMCLOCK                                                         12/16/2024 20:33:27 PAGE 4   

 169   7                      display(9, 0);    //ÊýÂë¹Ü²¢Ã»ÓÐµÚ9¶Î£¬´Ë´¦·ÀÖ¹µÚ°Ë¶ÎÏÔÊ¾Ê±¼ä¹ý³¤£¬ÁÁ¶È×îÁÁ£¬ÒòÎªds1302ReadTimeÏàµ
             -±ÓÚÒ»¸ö´óÑÓÊ±
 170   7                  }
 171   6                }
 172   5                setAlarm2();
 173   5              }
 174   4              else if(Alarm2Key == 1)    //¶Ì°´
 175   4              {
 176   5                reverseAlarm2();
 177   5              }
 178   4            }
 179   3          }
 180   2        }
 181   1        if(SetKey == 0)
 182   1        {
 183   2          DisplayRealTime();    //Ïû¶¶ÑÓÊ±
 184   2          if(SetKey == 0)
 185   2          {
 186   3            for(i=0; i<10; i++) DisplayRealTime();
 187   3            if(SetKey == 1)   //¶Ì°´
 188   3            {
 189   4              showYear();
 190   4            }
 191   3            else    //³¤°´
 192   3            {
 193   4              for(i=0; i<50; i++) DisplayRealTime();
 194   4              if(SetKey == 0)
 195   4              {
 196   5                while(SetKey == 0)    //µÈËûËÉ¿ª
 197   5                {
 198   6                  //////////////////Õâ¸öÊ±ºòÏÈÉÁ×Å£¬Èç¹ûËû¸Ò²»ËÉÊÖ¾Í²Ù×÷ÄÇ²»ÀíËû//////////////////////////
 199   6                  TR0 = 1;
 200   6                  if(flashFlag) DisplayTime(TIME, 0);
 201   6                  else for(i=1; i<10; i++) display(i, 20);
 202   6                }
 203   5                setTime();
 204   5              }
 205   4            }
 206   3          }
 207   2          else if(SetKey == 1)    //¶Ì°´
 208   2          {
 209   3            showYear();
 210   3          }
 211   2        }
 212   1        if(BoomKey == 0)
 213   1        {
 214   2          DisplayRealTime();    //Ïû¶¶ÑÓÊ±
 215   2          if(BoomKey == 0)
 216   2          {
 217   3            for(i=0; i<10; i++) DisplayRealTime();
 218   3            if(BoomKey == 1)    //¶Ì°´
 219   3            {
 220   4              Boom();
 221   4            }
 222   3            else    //³¤°´
 223   3            {
 224   4              for(i=0; i<50; i++) DisplayRealTime();
 225   4              if(BoomKey == 0)
 226   4              {
 227   5                setBrightness();
 228   5                while(BoomKey == 0) DisplayRealTime();
 229   5              }
C51 COMPILER V9.60.7.0   BOOMCLOCK                                                         12/16/2024 20:33:27 PAGE 5   

 230   4            }
 231   3          }
 232   2          else if(BoomKey == 1)    //¶Ì°´
 233   2          {
 234   3            Boom();
 235   3          }
 236   2        }
 237   1        TR0 = 0;          //¹Ø¶¨Ê±Æ÷
 238   1        TL0 = 0xCD;       //ÉèÖÃ¶¨Ê±³õÊ¼Öµ
 239   1        TH0 = 0xD4;       //ÉèÖÃ¶¨Ê±³õÊ¼Öµ
 240   1        for(i=0; i<10; i++) DisplayRealTime();    //°´ºóÒ²Ïû¶¶
 241   1      }
 242          
 243          void reverseAlarm1(void)  //·´×ªÄÖÖÓ1¿ª¹Ø
 244          {
 245   1        unsigned char i, j;
 246   1        enAlarm1 = !enAlarm1;
 247   1        AlarmLED1 = enAlarm1;
 248   1        if(Brightness == BrightnessHigh) for(i=0; i<127; i++) displayFlashAlarm(0, Alarm1Time, 0);
 249   1        else for(i=0; i<255; i++) for(j=0; j<8; j++) displayFlashAlarm(0, Alarm1Time, 0);
 250   1      }
 251          
 252          void reverseAlarm2(void)  //·´×ªÄÖÖÓ2¿ª¹Ø
 253          {
 254   1        unsigned char i, j;
 255   1        enAlarm2 = !enAlarm2;
 256   1        AlarmLED2 = enAlarm2;
 257   1        if(Brightness == BrightnessHigh) for(i=0; i<127; i++) displayFlashAlarm(0, Alarm2Time, 0);
 258   1        else for(i=0; i<255; i++) for(j=0; j<8; j++) displayFlashAlarm(0, Alarm2Time, 0);
 259   1      }
 260          
 261          void setBrightness(void)  //ÉèÖÃÁÁ¶È
 262          {
 263   1        if(Brightness > 10)
 264   1        {
 265   2          Brightness = BrightnessLow;
 266   2        }
 267   1        else if(Brightness < 10)
 268   1        {
 269   2          Brightness = BrightnessHigh;
 270   2        }
 271   1      }
 272          
 273          void Boom_Display(unsigned int i)    //²Êµ°ÖÐÏÔÊ¾Êý×Ö
 274          {
 275   1        unsigned char l, delay = 5;
 276   1        display(1, i/1000);
 277   1        for(l=delay; l>0; l--);
 278   1        display(2, i/100%10);
 279   1        for(l=delay; l>0; l--);
 280   1        display(3, i/10%10);
 281   1        for(l=delay; l>0; l--);
 282   1        display(4, i%10);
 283   1        for(l=delay; l>0; l--);
 284   1        display(9, 0);
 285   1      }
 286          
 287          void Boom(void)         //Ð¡²Êµ°
 288          {
 289   1        unsigned int i, j, k;
 290   1        for(i=10; i>0; i--)
 291   1        {
C51 COMPILER V9.60.7.0   BOOMCLOCK                                                         12/16/2024 20:33:27 PAGE 6   

 292   2          if(i<10)
 293   2          {
 294   3            for(j=50; j>0; j--)
 295   3            {
 296   4              Beep = !Beep;
 297   4              Boom_Display(i);
 298   4            }
 299   3          }
 300   2          for(j=1024; j>0; j--)    //ÑÓÊ±
 301   2          {
 302   3            Boom_Display(i);
 303   3            if(BoomKey == 0)    //Èç¹ûBoom°´Å¥°´ÏÂÊ±¼äÔö¼Ó10µ¥Î»
 304   3            {
 305   4              for(k=20; k>0; k--)    //Ïû¶¶
 306   4              {
 307   5                Boom_Display(i);
 308   5              }
 309   4              while(BoomKey == 0) Boom_Display(i);
 310   4              i += 10;
 311   4              if(i>9999) i=9999;
 312   4            }
 313   3            if((Alarm1Key & Alarm2Key & SetKey & UpKey &  DownKey) == 0)    //Èç¹ûÆäËû°´¼ü°´ÏÂÍË³ö
 314   3            {
 315   4              for(k=20; k>0; k--)    //Ïû¶¶
 316   4              {
 317   5                Boom_Display(i);
 318   5              }
 319   4              while((Alarm1Key & Alarm2Key & SetKey & UpKey & DownKey) == 0) Boom_Display(i);
 320   4              return;
 321   4            }
 322   3          }
 323   2        }
 324   1        PlayMusic();
 325   1      }
 326          
 327          void displayFlashAlarm(unsigned char select, unsigned char* date, bit isYear)    //ÓÃÕâ¸öº¯ÊýÇ°¼ÇµÃ°Ñ¶¨Ê±Æ
             -÷´ò¿ª£¬ÓÃÍêÔÙ¹ØÉÏ
 328          {
 329   1        if(!isYear)
 330   1        {
 331   2          if(select==1 && flashFlag) display(1, 20);
 332   2          else display(1, date[2]/16);
 333   2          BrightnessCtrl(Brightness);
 334   2          if(select==2 && flashFlag) display(2, 21);
 335   2          else display(2, date[2]%0x10+10);
 336   2          BrightnessCtrl(Brightness);
 337   2          if(select==3 && flashFlag) display(3, 20);
 338   2          else display(3, date[1]/16);
 339   2          BrightnessCtrl(Brightness);
 340   2          if(select==4 && flashFlag) display(4, 20);
 341   2          else display(4, date[1]&0x0f);
 342   2          BrightnessCtrl(Brightness);
 343   2          if(select==5 && flashFlag) display(5, 20);
 344   2          else display(5, TIME[4]/16);
 345   2          BrightnessCtrl(Brightness);
 346   2          if(select==6 && flashFlag) display(6, 20);
 347   2          else display(6, TIME[4]&0x0f);
 348   2          BrightnessCtrl(Brightness);
 349   2          if(select==7 && flashFlag) display(7, 20);
 350   2          else display(7, TIME[3]/16);
 351   2          BrightnessCtrl(Brightness);
 352   2          if(select==8 && flashFlag) display(8, 20);
C51 COMPILER V9.60.7.0   BOOMCLOCK                                                         12/16/2024 20:33:27 PAGE 7   

 353   2          else display(8, TIME[3]&0x0f);
 354   2          BrightnessCtrl(Brightness);
 355   2        }
 356   1        else
 357   1        {
 358   2          if(select==1 && flashFlag) display(1, 20);
 359   2          else display(1, 2);
 360   2          BrightnessCtrl(Brightness);
 361   2          if(select==2 && flashFlag) display(2, 20);
 362   2          else display(2, 0);
 363   2          BrightnessCtrl(Brightness);
 364   2          if(select==3 && flashFlag) display(3, 20);
 365   2          else display(3, TIME[6]/16);
 366   2          BrightnessCtrl(Brightness);
 367   2          if(select==4 && flashFlag) display(4, 20);
 368   2          else display(4, TIME[6]&0x0f);
 369   2          BrightnessCtrl(Brightness);
 370   2          if(select==5 && flashFlag) display(5, 20);
 371   2          else display(5, TIME[4]/16);
 372   2          BrightnessCtrl(Brightness);
 373   2          if(select==6 && flashFlag) display(6, 20);
 374   2          else display(6, TIME[4]&0x0f);
 375   2          BrightnessCtrl(Brightness);
 376   2          if(select==7 && flashFlag) display(7, 20);
 377   2          else display(7, TIME[3]/16);
 378   2          BrightnessCtrl(Brightness);
 379   2          if(select==8 && flashFlag) display(8, 20);
 380   2          else display(8, TIME[3]&0x0f);
 381   2          BrightnessCtrl(Brightness);
 382   2        }
 383   1      }
 384          
 385          void setAlarm1(void)      //ÉèÖÃÄÖÖÓ1
 386          {
 387   1        unsigned char i;
 388   1        unsigned char select = 1;
 389   1        while(select<5)
 390   1        {
 391   2          displayFlashAlarm(select, Alarm1Time, 0);
 392   2          if(Alarm1Key ==0)
 393   2          {
 394   3            for(i=0; i<10; i++) displayFlashAlarm(select, Alarm1Time, 0);
 395   3            if(Alarm1Key ==0)
 396   3            {
 397   4              while(Alarm1Key ==0) displayFlashAlarm(select, Alarm1Time, 0);
 398   4              if(Alarm1Time[2]>0x23) Alarm1Time[2] = 0x20;
 399   4              select++;
 400   4            }
 401   3          }
 402   2          if(UpKey == 0)
 403   2          {
 404   3            for(i=0; i<5; i++) displayFlashAlarm(select, Alarm1Time, 0);
 405   3            if(UpKey == 0)
 406   3            {
 407   4              while(UpKey ==0) displayFlashAlarm(select, Alarm1Time, 0);
 408   4              switch (select)
 409   4              {
 410   5                case 1:
 411   5                  if(Alarm1Time[2]/0x10 < 0x02) Alarm1Time[2] += 0x10;
 412   5                  else Alarm1Time[2] %= 0x10;
 413   5                  break;
 414   5                case 2:
C51 COMPILER V9.60.7.0   BOOMCLOCK                                                         12/16/2024 20:33:27 PAGE 8   

 415   5                  if(Alarm1Time[2]%0x10 < 0x09) Alarm1Time[2] += 0x01;
 416   5                  else Alarm1Time[2] = Alarm1Time[2]/0x10*0x10;
 417   5                  if(Alarm1Time[2] > 0x23) Alarm1Time[2] = 0x20;
 418   5                  break;
 419   5                case 3:
 420   5                  if(Alarm1Time[1]/0x10 < 0x05) Alarm1Time[1] += 0x10;
 421   5                  else Alarm1Time[1] %= 0x10;
 422   5                  break;
 423   5                case 4:
 424   5                  if(Alarm1Time[1]%0x10 < 0x09) Alarm1Time[1] += 0x01;
 425   5                  else Alarm1Time[1] = Alarm1Time[1]/0x10*0x10;
 426   5                  break;
 427   5              }
 428   4            }
 429   3          }
 430   2          if(DownKey == 0)
 431   2          {
 432   3            for(i=0; i<5; i++) displayFlashAlarm(select, Alarm1Time, 0);
 433   3            if(DownKey == 0)
 434   3            {
 435   4              while(DownKey ==0) displayFlashAlarm(select, Alarm1Time, 0);
 436   4              switch (select)
 437   4              {
 438   5                case 1:
 439   5                  if(Alarm1Time[2]/0x10 == 0x00) Alarm1Time[2] += 0x20;
 440   5                  else Alarm1Time[2] -= 0x10;
 441   5                  break;
 442   5                case 2:
 443   5                  if(Alarm1Time[2]%0x10 == 0x00) Alarm1Time[2] += 0x09;
 444   5                  else Alarm1Time[2] -= 0x01;
 445   5                  if(Alarm1Time[2] > 0x23) Alarm1Time[2] = 0x23;
 446   5                  break;
 447   5                case 3:
 448   5                  if(Alarm1Time[1]/0x10 == 0x00) Alarm1Time[1] += 0x50;
 449   5                  else Alarm1Time[1] -= 0x10;
 450   5                  break;
 451   5                case 4:
 452   5                  if(Alarm1Time[1]%0x10 == 0x00) Alarm1Time[1] += 0x09;
 453   5                  else Alarm1Time[1] -= 0x01;
 454   5                  break;
 455   5              }
 456   4            }
 457   3          }
 458   2        }
 459   1        AlarmLED1 = 1;
 460   1        enAlarm1 = 1;
 461   1      }
 462          
 463          void setAlarm2(void)      //ÉèÖÃÄÖÖÓ2
 464          {
 465   1        unsigned char i;
 466   1        unsigned char select = 1;
 467   1        while(select<5)
 468   1        {
 469   2          displayFlashAlarm(select, Alarm2Time, 0);
 470   2          if(Alarm2Key ==0)
 471   2          {
 472   3            for(i=0; i<10; i++) displayFlashAlarm(select, Alarm2Time, 0);
 473   3            if(Alarm2Key ==0)
 474   3            {
 475   4              while(Alarm2Key ==0) displayFlashAlarm(select, Alarm2Time, 0);
 476   4              if(Alarm2Time[2]>0x23) Alarm2Time[2] = 0x20;
C51 COMPILER V9.60.7.0   BOOMCLOCK                                                         12/16/2024 20:33:27 PAGE 9   

 477   4              select++;
 478   4            }
 479   3          }
 480   2          if(UpKey == 0)
 481   2          {
 482   3            for(i=0; i<5; i++) displayFlashAlarm(select, Alarm2Time, 0);
 483   3            if(UpKey == 0)
 484   3            {
 485   4              while(UpKey ==0) displayFlashAlarm(select, Alarm2Time, 0);
 486   4              switch (select)
 487   4              {
 488   5                case 1:
 489   5                  if(Alarm2Time[2]/0x10 < 0x02) Alarm2Time[2] += 0x10;
 490   5                  else Alarm2Time[2] %= 0x10;
 491   5                  break;
 492   5                case 2:
 493   5                  if(Alarm2Time[2]%0x10 < 0x09) Alarm2Time[2] += 0x01;
 494   5                  else Alarm2Time[2] = Alarm2Time[2]/0x10*0x10;
 495   5                  if(Alarm2Time[2] > 0x23) Alarm2Time[2] = 0x20;
 496   5                  break;
 497   5                case 3:
 498   5                  if(Alarm2Time[1]/0x10 < 0x05) Alarm2Time[1] += 0x10;
 499   5                  else Alarm2Time[1] %= 0x10;
 500   5                  break;
 501   5                case 4:
 502   5                  if(Alarm2Time[1]%0x10 < 0x09) Alarm2Time[1] += 0x01;
 503   5                  else Alarm2Time[1] = Alarm2Time[1]/0x10*0x10;
 504   5                  break;
 505   5              }
 506   4            }
 507   3          }
 508   2          if(DownKey == 0)
 509   2          {
 510   3            for(i=0; i<5; i++) displayFlashAlarm(select, Alarm2Time, 0);
 511   3            if(DownKey == 0)
 512   3            {
 513   4              while(DownKey ==0) displayFlashAlarm(select, Alarm2Time, 0);
 514   4              switch (select)
 515   4              {
 516   5                case 1:
 517   5                  if(Alarm2Time[2]/0x10 == 0x00) Alarm2Time[2] += 0x20;
 518   5                  else Alarm2Time[2] -= 0x10;
 519   5                  break;
 520   5                case 2:
 521   5                  if(Alarm2Time[2]%0x10 == 0x00) Alarm2Time[2] += 0x09;
 522   5                  else Alarm2Time[2] -= 0x01;
 523   5                  if(Alarm2Time[2] > 0x23) Alarm2Time[2] = 0x23;
 524   5                  break;
 525   5                case 3:
 526   5                  if(Alarm2Time[1]/0x10 == 0x00) Alarm2Time[1] += 0x50;
 527   5                  else Alarm2Time[1] -= 0x10;
 528   5                  break;
 529   5                case 4:
 530   5                  if(Alarm2Time[1]%0x10 == 0x00) Alarm2Time[1] += 0x09;
 531   5                  else Alarm2Time[1] -= 0x01;
 532   5                  break;
 533   5              }
 534   4            }
 535   3          }
 536   2        }
 537   1        AlarmLED2 = 1;
 538   1        enAlarm2 = 1;
C51 COMPILER V9.60.7.0   BOOMCLOCK                                                         12/16/2024 20:33:27 PAGE 10  

 539   1      }
 540          
 541          void showYear(void)
 542          {
 543   1        unsigned char i;
 544   1        for(i=0; i<255; i++) displayFlashAlarm(0, TIME, 1);
 545   1      }
 546          
 547          void Timer0_Init(void)    //1ºÁÃë@11.0592MHz
 548          {
 549   1        TMOD &= 0xF0;     //ÉèÖÃ¶¨Ê±Æ÷Ä£Ê½
 550   1        TMOD |= 0x01;     //ÉèÖÃ¶¨Ê±Æ÷Ä£Ê½
 551   1        TL0 = 0xCD;       //ÉèÖÃ¶¨Ê±³õÊ¼Öµ
 552   1        TH0 = 0xD4;       //ÉèÖÃ¶¨Ê±³õÊ¼Öµ
 553   1        TF0 = 0;          //Çå³ýTF0±êÖ¾
 554   1        ET0 = 1;
 555   1        EA = 1;
 556   1        //TR0 = 1;        //¶¨Ê±Æ÷0¿ªÊ¼¼ÆÊ±
 557   1      }
 558          
 559          void tm0_isr() interrupt 1 using 1
 560          {
 561   1        TL0 = 0xCD;       //ÉèÖÃ¶¨Ê±³õÊ¼Öµ
 562   1        TH0 = 0xD4;       //ÉèÖÃ¶¨Ê±³õÊ¼Öµ
 563   1        if(flashCount<30) flashCount++;
 564   1        else
 565   1        {
 566   2          flashCount = 0;
 567   2          flashFlag = !flashFlag;
 568   2        }
 569   1      }
 570          
 571          void tm1_isr() interrupt 3 using 1
 572          {
 573   1        Beep=!Beep;
 574   1        TH1=T[m][0]; TL1=T[m][1];
 575   1      }
 576          
 577          void AlarmSync(void)
 578          {
 579   1        AlarmLED1 = enAlarm1;
 580   1        AlarmLED2 = enAlarm2;
 581   1        if(enAlarm1 &&
 582   1           TIME[0] == 0x00 &&
 583   1           Alarm1Time[1] == TIME[1] &&
 584   1           Alarm1Time[2] == TIME[2]) AlarmBeep();
 585   1        if(enAlarm2 &&
 586   1           TIME[0] == 0x00 &&
 587   1           Alarm2Time[1] == TIME[1] &&
 588   1           Alarm2Time[2] == TIME[2]) AlarmBeep();
 589   1      }
 590          
 591          void AlarmBeep(void)    //ÄÖÖÓÏìÁå
 592          {
 593   1        unsigned char i, j, k;
 594   1        bit flag = 1;
 595   1        while(flag)
 596   1        {
 597   2          for(i=0; i<4; i++)
 598   2          {
 599   3            for(j=0; j<50; j++)
 600   3            {
C51 COMPILER V9.60.7.0   BOOMCLOCK                                                         12/16/2024 20:33:27 PAGE 11  

 601   4              Beep = !Beep;
 602   4              for(k=0; k<15; k++) 
 603   4              {
 604   5                Delay50us();
 605   5                if(!(Alarm1Key && Alarm2Key && SetKey && UpKey && DownKey && BoomKey)) flag = 0;
 606   5                if(!flag) break;
 607   5              }
 608   4              if(!(Alarm1Key && Alarm2Key && SetKey && UpKey && DownKey && BoomKey)) flag = 0;
 609   4              if(!flag) break;
 610   4            }
 611   3            for(j=0; j<4; j++)
 612   3            {
 613   4              DisplayRealTime();
 614   4            }
 615   3            if(!(Alarm1Key && Alarm2Key && SetKey && UpKey && DownKey && BoomKey)) flag = 0;
 616   3            if(!flag) break;
 617   3          }
 618   2          for(i=0; i<20; i++)
 619   2          {
 620   3            DisplayRealTime();
 621   3            if(!(Alarm1Key && Alarm2Key && SetKey && UpKey && DownKey && BoomKey)) flag = 0;
 622   3            if(!flag) break;
 623   3          }
 624   2        }
 625   1        Beep = 1;
 626   1        for(i=0; i<10; i++) Delay50us();
 627   1      }
 628          
 629          void setTime(void)
 630          {
 631   1        unsigned char i;
 632   1        unsigned char select = 1;
 633   1        while(select<11)
 634   1        {
 635   2          if(select <9) displayFlashAlarm(select, TIME, 0);
 636   2          if(select >8) displayFlashAlarm(select-6, TIME, 1);
 637   2          if(SetKey ==0)
 638   2          {
 639   3            if(select < 9) for(i=0; i<10; i++) displayFlashAlarm(select, TIME, 0);
 640   3            if(select > 8) for(i=0; i<10; i++) displayFlashAlarm(select, TIME, 1);
 641   3            if(SetKey ==0)
 642   3            {
 643   4              while(SetKey ==0)
 644   4              {
 645   5                if(select < 9) for(i=0; i<10; i++) displayFlashAlarm(select, TIME, 0);
 646   5                if(select > 8) for(i=0; i<10; i++) displayFlashAlarm(select, TIME, 1);
 647   5              }
 648   4              if(TIME[2] > 0x23) TIME[2] = 0x20;
 649   4              if(TIME[4] > 0x12) TIME[4] = 0x10;
 650   4              if(TIME[4] == 0x00) TIME[4] = 0x01;
 651   4              if(TIME[3] == 0x00) TIME[3] = 0x01;
 652   4              if(TIME[3] > 0x31 && (TIME[4] == 0x01 ||    //´óÔÂ31Ìì
 653   4                                  TIME[4] == 0x03 ||
 654   4                                  TIME[4] == 0x05 ||
 655   4                                  TIME[4] == 0x07 ||
 656   4                                  TIME[4] == 0x08 ||
 657   4                                  TIME[4] == 0x10 ||
 658   4                                  TIME[4] == 0x12)) TIME[3] = 0x30;
 659   4              if(TIME[3]>0x30 && (TIME[4] == 0x04 ||    //Ð¡ÔÂ30Ìì
 660   4                                  TIME[4] == 0x06 ||
 661   4                                  TIME[4] == 0x09 ||
 662   4                                  TIME[4] == 0x11)) TIME[3] = 0x30;
C51 COMPILER V9.60.7.0   BOOMCLOCK                                                         12/16/2024 20:33:27 PAGE 12  

 663   4              if(TIME[3]>0x29 && TIME[4] == 0x02 && TIME[6]%4 == 0) TIME[3] = 0x20;    //Èò¶þÔÂ29Ìì
 664   4              if(TIME[3]>0x28 && TIME[4] == 0x02 && TIME[6]%4 != 0) TIME[3] = 0x20;    //Æ½¶þÔÂ28Ìì
 665   4              select++;
 666   4            }
 667   3          }
 668   2          if(UpKey == 0)
 669   2          {
 670   3            if(select < 9) for(i=0; i<10; i++) displayFlashAlarm(select, TIME, 0);
 671   3            if(select > 8) for(i=0; i<10; i++) displayFlashAlarm(select, TIME, 1);
 672   3            if(UpKey == 0)
 673   3            {
 674   4              if(select < 9) while(UpKey ==0) displayFlashAlarm(select, TIME, 0);
 675   4              if(select > 8) while(UpKey ==0) displayFlashAlarm(select, TIME, 1);
 676   4              switch (select)
 677   4              {
 678   5                case 1:    //ÉèÖÃÐ¡Ê±Ê®Î»
 679   5                  if(TIME[2]/0x10 < 0x02) TIME[2] += 0x10;
 680   5                  else TIME[2] %= 0x10;
 681   5                  break;
 682   5                case 2:    //ÉèÖÃÐ¡Ê±¸öÎ»
 683   5                  if(TIME[2]%0x10 < 0x09) TIME[2] += 0x01;
 684   5                  else TIME[2] = TIME[2]/0x10*0x10;
 685   5                  if(TIME[2] > 0x23) TIME[2] = 0x20;
 686   5                  break;
 687   5                case 3:    //ÉèÖÃ·ÖÖÓÊ®Î»
 688   5                  if(TIME[1]/0x10 < 0x05) TIME[1] += 0x10;
 689   5                  else TIME[1] %= 0x10;
 690   5                  break;
 691   5                case 4:    //ÉèÖÃ·ÖÖÓ¸öÎ»
 692   5                  if(TIME[1]%0x10 < 0x09) TIME[1] += 0x01;
 693   5                  else TIME[1] = TIME[1]/0x10*0x10;
 694   5                  break;
 695   5                case 5:    //ÉèÖÃÔÂ·ÝÊ®Î»
 696   5                  if(TIME[4]/0x10 < 0x01) TIME[4] += 0x10;
 697   5                  else TIME[4] %= 0x10;
 698   5                  break;
 699   5                case 6:    //ÉèÖÃÔÂ·Ý¸öÎ»
 700   5                  if(TIME[4]%0x10 < 0x09) TIME[4] += 0x01;
 701   5                  else TIME[4] = TIME[4]/0x10*0x10;
 702   5                  if(TIME[4] > 0x12) TIME[4] = 0x10;
 703   5                  if(TIME[4] == 0x00) TIME[4] = 0x01;
 704   5                  break;
 705   5                case 7:    //ÉèÖÃÈÕÆÚÊ®Î»
 706   5                  if(TIME[3]/0x10 < 0x03) TIME[3] += 0x10;
 707   5                  else TIME[3] %= 0x10;
 708   5                  break;
 709   5                case 8:    //ÉèÖÃÈÕÆÚ¸öÎ»
 710   5                  if(TIME[3]%0x10 < 0x09) TIME[3] +=0x01;
 711   5                  else TIME[3] = TIME[3]/0x10*0x10;
 712   5                  if(TIME[3] == 0x00) TIME[3] = 0x01;
 713   5                  if(TIME[3]>0x31 && (TIME[4] == 0x01 ||    //´óÔÂ31Ìì
 714   5                                      TIME[4] == 0x03 ||
 715   5                                      TIME[4] == 0x05 ||
 716   5                                      TIME[4] == 0x07 ||
 717   5                                      TIME[4] == 0x08 ||
 718   5                                      TIME[4] == 0x10 ||
 719   5                                      TIME[4] == 0x12)) TIME[3] = 0x30;
 720   5                  if(TIME[3]>0x30 && (TIME[4] == 0x04 ||    //Ð¡ÔÂ30Ìì
 721   5                                      TIME[4] == 0x06 ||
 722   5                                      TIME[4] == 0x09 ||
 723   5                                      TIME[4] == 0x11)) TIME[3] = 0x30;
 724   5                  if(TIME[3]>0x29 && TIME[4] == 0x02 && TIME[6]%4 == 0) TIME[3] = 0x20;    //Èò¶þÔÂ29Ìì
C51 COMPILER V9.60.7.0   BOOMCLOCK                                                         12/16/2024 20:33:27 PAGE 13  

 725   5                  if(TIME[3]>0x28 && TIME[4] == 0x02 && TIME[6]%4 != 0) TIME[3] = 0x20;    //Æ½¶þÔÂ28Ìì
 726   5                  break;
 727   5                case 9:    //ÉèÖÃÄê10Î»
 728   5                  if(TIME[6]/0x10 <0x09) TIME[6] += 0x10;
 729   5                  else TIME[6] %= 0x10;
 730   5                  break;
 731   5                case 10:    //ÉèÖÃÄê¸öÎ»
 732   5                  if(TIME[6]%0x10 <0x09) TIME[6] += 0x01;
 733   5                  else TIME[6] = TIME[6]/0x10*0x10;
 734   5                  break;
 735   5              }
 736   4            }
 737   3          }
 738   2          if(DownKey == 0)
 739   2          {
 740   3            if(select < 9) for(i=0; i<10; i++) displayFlashAlarm(select, TIME, 0);
 741   3            if(select > 8) for(i=0; i<10; i++) displayFlashAlarm(select, TIME, 1);
 742   3            if(DownKey == 0)
 743   3            {
 744   4              if(select < 9) while(UpKey ==0) displayFlashAlarm(select, TIME, 0);
 745   4              if(select > 8) while(UpKey ==0) displayFlashAlarm(select, TIME, 1);
 746   4              switch (select)
 747   4              {
 748   5                case 1:    //ÉèÖÃÐ¡Ê±Ê®Î»
 749   5                  if(TIME[2]/0x10 == 0x00) TIME[2] += 0x20;
 750   5                  else TIME[2] -= 0x10;
 751   5                  break;
 752   5                case 2:    //ÉèÖÃÐ¡Ê±¸öÎ»
 753   5                  if(TIME[2]%0x10 == 0x00) TIME[2] += 0x09;
 754   5                  else TIME[2] -= 0x01;
 755   5                  if(TIME[2] > 0x23) TIME[2] = 0x23;
 756   5                  break;
 757   5                case 3:    //ÉèÖÃ·ÖÖÓÊ®Î»
 758   5                  if(TIME[1]/0x10 == 0x00) TIME[1] += 0x50;
 759   5                  else TIME[1] -= 0x10;
 760   5                  break;
 761   5                case 4:    //ÉèÖÃ·ÖÖÓ¸öÎ»
 762   5                  if(TIME[1]%0x10 == 0x00) TIME[1] += 0x09;
 763   5                  else TIME[1] -= 0x01;
 764   5                  break;
 765   5                case 5:    //ÉèÖÃÔÂ·ÝÊ®Î»
 766   5                  if(TIME[4]/0x10 == 0x00) TIME[4] += 0x10;
 767   5                  else TIME[4] -= 0x10;
 768   5                  break;
 769   5                case 6:    //ÉèÖÃÔÂ·Ý¸öÎ»
 770   5                  if(TIME[4]%0x10 == 0x00) TIME[4] += 0x09;
 771   5                  else TIME[4] -= 0x01;
 772   5                  if(TIME[4] > 0x12) TIME[4] = 0x10;
 773   5                  if(TIME[4] == 0x00) TIME[4] = 0x09;
 774   5                  break;
 775   5                case 7:    //ÉèÖÃÈÕÆÚÊ®Î»
 776   5                  if(TIME[3]/0x10 == 0x00)
 777   5                    if(TIME[4] == 0x02) TIME[3] += 0x20;
 778   5                    else TIME[3] += 0x30;
 779   5                  else TIME[3] -= 0x10;
 780   5                  break;
 781   5                case 8:    //ÉèÖÃÈÕÆÚ¸öÎ»
 782   5                  if(TIME[3]%0x10 == 0x00) TIME[3] += 0x09;
 783   5                  else TIME[3] -= 0x01;
 784   5                  if(TIME[3] == 0x00) TIME[3] = 0x09;
 785   5                  if(TIME[3]>0x31 && (TIME[4] == 0x01 ||    //´óÔÂ31Ìì
 786   5                                      TIME[4] == 0x03 ||
C51 COMPILER V9.60.7.0   BOOMCLOCK                                                         12/16/2024 20:33:27 PAGE 14  

 787   5                                      TIME[4] == 0x05 ||
 788   5                                      TIME[4] == 0x07 ||
 789   5                                      TIME[4] == 0x08 ||
 790   5                                      TIME[4] == 0x10 ||
 791   5                                      TIME[4] == 0x12)) TIME[3] = 0x31;
 792   5                  if(TIME[3]>0x30 && (TIME[4] == 0x04 ||    //Ð¡ÔÂ30Ìì
 793   5                                      TIME[4] == 0x06 ||
 794   5                                      TIME[4] == 0x09 ||
 795   5                                      TIME[4] == 0x11)) TIME[3] = 0x30;
 796   5                  if(TIME[3]>0x29 && TIME[4] == 0x02 && TIME[6]%4 == 0) TIME[3] = 0x29;    //Èò¶þÔÂ29Ìì
 797   5                  if(TIME[3]>0x28 && TIME[4] == 0x02 && TIME[6]%4 != 0) TIME[3] = 0x28;    //Æ½¶þÔÂ28Ìì
 798   5                  break;
 799   5                case 9:    //ÉèÖÃÄê10Î»
 800   5                  if(TIME[6]/0x10 == 0x00) TIME[6] += 0x10;
 801   5                  else TIME[6] -= 0x10;
 802   5                  break;
 803   5                case 10:    //ÉèÖÃÄê¸öÎ»
 804   5                  if(TIME[6]%0x10 == 0x00) TIME[6] += 0x09;
 805   5                  else TIME[6] -= 0x01;
 806   5                  break;
 807   5              }
 808   4            }
 809   3          }
 810   2        }
 811   1        TIME[0] = 0x00;
 812   1        ds1302WriteTime();
 813   1      }
 814          
 815          void music_delay(unsigned char p)
 816          {
 817   1        unsigned char i,j; 
 818   1        for(;p>0;p--)
 819   1        for(i=151;i>0;i--)
 820   1        for(j=21;j>0;j--)
 821   1        {
 822   2          music_display();
 823   2        }
 824   1      }
 825          
 826          void music_pause()
 827          {
 828   1        unsigned char i,j;
 829   1        for(i=120;i>0;i--)
 830   1        for(j=1;j>0;j--)
 831   1        {
 832   2          music_display();
 833   2        }
 834   1      }
 835          
 836          void music_display()
 837          {
 838   1        P0 = 0x00;
 839   1        P2 = 0xFE;
 840   1        P0 = 0x7C;
 841   1        
 842   1        P0 = 0x00;
 843   1        P2 = 0xF1;
 844   1        P0 = 0x5C;
 845   1        
 846   1        P0 = 0x00;
 847   1      }
 848          
C51 COMPILER V9.60.7.0   BOOMCLOCK                                                         12/16/2024 20:33:27 PAGE 15  

 849          void PlayMusic()
 850          {
 851   1        unsigned char i=0; 
 852   1        TMOD&=0x0F;  TMOD|=0x10;  EA=1; ET1=1;
 853   1        while(1)
 854   1        {
 855   2          m=music[i][0];n=music[i][1]/2;
 856   2          if(m==0x00)
 857   2          {
 858   3            TR1=0;
 859   3            music_delay(n);
 860   3            i++;
 861   3          }
 862   2          else if(m==0xFF)
 863   2          {
 864   3            TR1=0;
 865   3            Beep=1;
 866   3            return;
 867   3          }
 868   2          else if(m==music[i+1][0])
 869   2          {
 870   3            TR1=1;
 871   3            music_delay(n);
 872   3            TR1=0;
 873   3            music_pause();
 874   3            i++;
 875   3          }
 876   2          else
 877   2          {
 878   3            TR1=1;
 879   3            music_delay(n);
 880   3            i++;
 881   3          }
 882   2        }
 883   1      }
 884          
 885          #endif


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   4826    ----
   CONSTANT SIZE    =    284    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     25      28
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      3       3
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
